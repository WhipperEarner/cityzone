@import url("https://fonts.googleapis.com/css2?family=Nunito:ital,wght@0,300;0,400;0,700;0,900;1,600&display=swap");
@import url('https://fonts.googleapis.com/css2?family=Merriweather:ital,wght@1,700&display=swap');

:root {
  /* colors */
  --clr-white: hsl(220, 37%, 100%);
  --clr-surface: hsl(220, 37%, 97%);
  --clr-text: hsl(244, 44%, 14%);

  --clr-yellow-400: hsl(42, 99%, 69%);
  --clr-yellow-300: hsl(47, 100%, 90%);
  --clr-purple-400: hsl(280, 96%, 45%);
  --clr-purple-300: hsl(282, 89%, 90%);
  --clr-cyan-400: hsl(198, 99%, 49%);
  --clr-green-300: hwb(112 47% 28%);

  /* font families */
  --ff-base: "IBM Plex Sans", sans-serif;
  --ff-accent: "Young Serif", serif;
  --ff-headings: 'Merriweather', serif;

  /* font weights */
  --fw-regular: 500;
  --fw-bold: 600;
  --fw-black: 700;

  /* font sizes */
  --fs-300: 1rem;
  --fs-400: 1.125rem;
  --fs-500: 1.375rem;
  --fs-600: 1.75rem;
  --fs-700: 2.25rem;
}

/* * {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
} */

* {
  box-sizing: border-box;
  padding: initial;
  /* margin: initial; */
}

body {
  font-family: "Source Sans Pro", sans-serif;
}

/* header, */
aside,
footer {
  padding: 1rem;
}

.header-outer {
  align-items: center;
  background: var(--clr-cyan-400);
  box-shadow: 0 6px 20px 0 rgba(0, 0, 0, 0.1);
  display: flex;
  /* set the height for the header at its max height you want */
  height: 150px;
  left: 0;
  padding: 0 50px;
  position: sticky;
  /** set the value of `top` with the difference between
  * the height of the outer and inner container to compensate
  * for this */
  top: -50px;
  /* width: 100%; */
  z-index: 1;
}


.header-inner {
  align-items: center;
  background-color:var(clr-surface);
  display: flex;
  /** specify the height of the header that you want when scrolling
  *The difference between this height and the height of the outer header
  *is the value of the `top` of the outer container */
  height: 100px;
  justify-content: space-between;
  left: 0;
  position: sticky;
  top: 0;
  width: 80%;
}

.logo-container {
  display: flex;
  gap: 1rem;
  justify-content:space-evenly;
  flex-grow: 1;
  flex-shrink: 1;
}


header h3 {
  padding-left: 20px;
  font-family:var(--ff-headings);
  font-weight: var(--fs-700);
  font-size:var(--fs-600);
}

.logo-container article {
  flex-grow: 1;
  flex-shrink: 1;
  border: solid 1px #247e9d;
  text-align: center;
}

  
.logo-container article img {
  max-width: 100%;
  height: auto;
}


/* header {
  background-color: antiquewhite;
  font-size: 2rem;
} */

aside {
  background-color: aquamarine;
  max-width: 200px;
}

main {
  margin: 1em;
}
main .text {
  margin: 0 auto;
  padding: 30px;
  /* max-width: 900px; */
  font-family: 'Open Sans', sans-serif;
  font-size: 1.5rem;
  line-height: 1.4;
  }

  main .text p {
    margin: 30px 0;
  }

article {
  border: solid 1px #247e9d;
  text-align: center;
}
article img {
  max-width: 100%;
  height: auto;
}

button {
  background: #3c8453;
  color: #f6f6f6;
  text-decoration: none;
  text-transform: uppercase;
  font-size: .6rem;
  display: inline-block;
  padding: 7px;
  letter-spacing: 0.1em;
  line-height: 1;
  border-radius: 4px;
}

footer {
  background-color: #247e9d;
}


header {
  grid-area: header;
}

aside {
  grid-area: aside;
  display: grid;
  justify-content:center;
  align-items: center;
  }

.images {
  grid-area: main;
  display: grid;
  grid-template-columns:repeat(auto-fit, minmax(300px, 1fr));
    
  /* so Autofit is just the # of child elements in the grid, like 3 here
  and minmax is giving the min and max range of each column, before moving to next col  */
  grid-gap: 1em;
}

article {
  /* position: relative; */
  display: grid; /* to maintain the full box size (max witdh=  100% of img above!*/
  justify-content: center;
  /* grid property: horitzontal center */
  align-items: center;
  /* grid propery: vertical center: as opposed to align-self, which is reduces the size of box */
  /* gap: 1rem; */
  background: var(--clr-white);
  /* padding: 2rem; */
  border-radius: 0.75rem;
}

article:hover {
  box-shadow:14px 13px 22px 6px rgba(29, 53, 171, 0.69),6px 14px 21px 9px rgba(39, 171, 19, 0.74);
}

footer {
  grid-area: footer;
}

.container {
  display: grid;
  grid-template-areas:
    "header"
    "main"
    "aside"
    "footer";
  /* rearranging 'aside' after 'main' as otherwise in HTML file */
}

 /* article:nth-of-type(:last-child) {
  grid-column: 1/-1; } */
  /* Nth of type(last child) is the shark, and grid-column (start 1 /stop -1), its a grid in itself */






@media screen and (min-width: 800px) {
  .container {
    grid-template-areas:
      "header header header header"
      ". aside main ."
      /* this one require 4 columns to the container, so 4 for header and footer too */
      "footer footer footer footer";
  }
  aside {
    margin-right: 1rem;
  }
  main {
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  }
  article:nth-of-type(:last-child) {
    grid-column: auto;
  }
}

@media screen and (max-width: 799px) {
  
  aside {
    margin-right: 1rem;
    max-width: none;
    display: inline;
  }
  main .text {
    margin: 0 auto;
    padding: 10px;
    /* max-width: 900px; */
    font-size: 1.2rem;
    line-height: 1.2;
    }

    /* .logo-container article {
      flex-shrink: 0;
    } */

    .header-inner {
      align-items:center;
      background-color:var(clr-surface);
      display: flex;
      /** specify the height of the header that you want when scrolling
      *The difference between this height and the height of the outer header
      *is the value of the `top` of the outer container */
      height: 100px;
      justify-content:right;
      left: 80px;
      position: sticky;
      top: 0;
      min-width: 80%;
    }

    header h3 {
      margin-left: 10px;
      font-family:var(--ff-headings);
      font-weight: var(--fs-100);
      font-size:var(--fs-300);
    }

}



